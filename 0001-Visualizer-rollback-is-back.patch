From 47f4553e1254e96d075d7be57ee1f72ec025efd8 Mon Sep 17 00:00:00 2001
From: Pavel Egorov <xoposhiy@mail.ru>
Date: Sun, 15 Jul 2012 19:16:20 +0600
Subject: [PATCH] Visualizer rollback is back!

---
 icfpc2012/Logic/Engine.cs        | 24 ++++++++----------------
 icfpc2012/Tests/Correctness.cs   |  9 ++++-----
 icfpc2012/Visualizer/MainForm.cs | 11 +++--------
 3 files changed, 15 insertions(+), 29 deletions(-)

diff --git a/icfpc2012/Logic/Engine.cs b/icfpc2012/Logic/Engine.cs
index 4fb4635..e9707df 100644
--- a/icfpc2012/Logic/Engine.cs
+++ b/icfpc2012/Logic/Engine.cs
@@ -5,42 +5,34 @@ namespace Logic
 {
 	public class Engine
 	{
-		public Engine(Map map)
-		{
-			Map = map;
-		}
-
-		public Map Map { get; private set; }
-
 		public event Action<Map> OnMapUpdate;
 		public event Action<RobotMove> OnMoveAdded;
 
-		public virtual void RunProgram(IEnumerable<RobotMove> moves)
+		public virtual Map RunProgram(Map map, IEnumerable<RobotMove> moves)
 		{
 			try
 			{
 				foreach (var move in moves)
-					DoMove(move);
+					map = DoMove(move, map);
 			}
 			catch (GameFinishedException)
 			{
 			}
+			return map;
 		}
 
-		public void DoMove(RobotMove robotMove)
+		public Map DoMove(RobotMove robotMove, Map map)
 		{
-			if (Map.State != CheckResult.Nothing) return;
-			var newMap = Map.Move(robotMove);
+			if (map.State != CheckResult.Nothing) return map;
+			var resMap = map.Move(robotMove);
 			AddMove(robotMove);
-			UpdateMap(newMap);
-			if (newMap.State != CheckResult.Nothing)
-				throw new GameFinishedException();
+			UpdateMap(resMap);
+			return resMap;
 		}
 
 		private void UpdateMap(Map newMap)
 		{
 			if (OnMapUpdate != null) OnMapUpdate(newMap);
-			Map = newMap;
 		}
 
 		private void AddMove(RobotMove move)
diff --git a/icfpc2012/Tests/Correctness.cs b/icfpc2012/Tests/Correctness.cs
index 447ca88..b8086a9 100644
--- a/icfpc2012/Tests/Correctness.cs
+++ b/icfpc2012/Tests/Correctness.cs
@@ -33,11 +33,10 @@ namespace Tests
 			return string.Format("test case: {4}\r\n{0}\r\n{1}\r\n{2}\r\n{3}\r\n", Moves.Aggregate(string.Empty, (s, m) => s + m.ToChar()), Result, Score, FinalMapState, MapName);
 		}
 
-		public bool AssertEngineState(Engine e)
+		public bool AssertEngineState(Map actualMap)
 		{
 			try
 			{
-				var actualMap = e.Map;
 				CheckResult checkResult = actualMap.State;
 				if (checkResult == CheckResult.Abort) checkResult = CheckResult.Nothing; //Специфика загружалки результатов валидатора
 				Assert.AreEqual(Result, checkResult, this.ToString());
@@ -122,9 +121,9 @@ namespace Tests
 				foreach (var testItem in GetReferenceTestItems(mapName))
 				{
 					Console.WriteLine(testItem.Filename);
-					var engine = new Engine(new Map(t.Item2));
-					engine.RunProgram(testItem.Moves);
-					if (!testItem.AssertEngineState(engine)) testsFailed++;
+					var engine = new Engine();
+					var map = engine.RunProgram(new Map(t.Item2), testItem.Moves);
+					if (!testItem.AssertEngineState(map)) testsFailed++;
 				}
 			}
 			Assert.AreEqual(0, testsFailed);
diff --git a/icfpc2012/Visualizer/MainForm.cs b/icfpc2012/Visualizer/MainForm.cs
index afe227d..55f6d0a 100644
--- a/icfpc2012/Visualizer/MainForm.cs
+++ b/icfpc2012/Visualizer/MainForm.cs
@@ -127,7 +127,7 @@ namespace Visualizer
 			bestPath = new Tuple<int, string>(0, "A");
 			var newMap = new Map(File.ReadAllLines(mapFile));
 			mapsHistory = new Stack<Map>();
-			engine = new Engine(newMap);
+			engine = new Engine();
 			engine.OnMapUpdate += m => UpdateMap(m, true);
 			engine.OnMoveAdded += m => moves.Add(m);
 			if (newMap.Width * newMap.Height > 150 * 150 && CellSize > 2) zoomBar.Value = 2;
@@ -222,14 +222,9 @@ namespace Visualizer
 
 		private void DoMove(RobotMove robotMove)
 		{
-			try
-			{
-				engine.DoMove(robotMove);
-			}
-			catch (GameFinishedException)
-			{
+			var newMap = engine.DoMove(robotMove, map);
+			if (newMap.State != CheckResult.Nothing)
 				SaveMoves();
-			}
 		}
 
 		private void SaveMoves()
-- 
1.7.11.msysgit.1

